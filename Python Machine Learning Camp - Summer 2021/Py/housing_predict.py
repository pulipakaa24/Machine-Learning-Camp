# -*- coding: utf-8 -*-
"""Housing predict

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EcfKordfP7J-Jf6N6LZyupQg5eFR-owj
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split as tts
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeRegressor
from sklearn.svm import SVR
from sklearn.linear_model import LinearRegression
from sklearn.neighbors import KNeighborsRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score
from sklearn.preprocessing import PolynomialFeatures

dataset = pd.read_csv('data (2).csv')
x = dataset.iloc[:, 2:14].values
y = dataset.iloc[:, 1:2].values
print(x)

xtrain, xtest, ytrain, ytest = tts(x, y, test_size=0.3, random_state=0)
sc = StandardScaler()
ytrain = sc.fit_transform(ytrain)
ytest = sc.transform(ytest)
xtrain[:, [2, 3, 8, 9, 10, 11]] = sc.fit_transform(xtrain[:, [2, 3, 8, 9, 10, 11]])
xtest[:, [2, 3, 8, 9, 10, 11]] = sc.transform(xtest[:, [2, 3, 8, 9, 10, 11]])

reg = LinearRegression()
reg.fit(xtrain, ytrain)
ypred = reg.predict(xtest)
print(r2_score(ytest, ypred))

reg = LinearRegression()
poly = PolynomialFeatures(degree=4)
xpoly = poly.fit_transform(xtrain)
reg.fit(xpoly, ytrain)
ypred = reg.predict(poly.transform(xtest))
print(r2_score(ytest, ypred))

reg = KNeighborsRegressor(n_neighbors=3)
reg.fit(xtrain, ytrain)
ypred = reg.predict(xtest)
print(r2_score(ytest, ypred))

reg = DecisionTreeRegressor()
reg.fit(xtrain, ytrain)
ypred = reg.predict(xtest)
print(r2_score(ytest, ypred))

reg = RandomForestRegressor()
reg.fit(xtrain, ytrain)
ypred = reg.predict(xtest)
print(r2_score(ytest, ypred))

reg = SVR()