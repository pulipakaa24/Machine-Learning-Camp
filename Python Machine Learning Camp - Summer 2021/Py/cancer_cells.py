# -*- coding: utf-8 -*-
"""Cancer Cells

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zb-1ZUAL5hoWfNpuLlwKg7DV0B85N_ew
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split as tts
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.svm import SVC
from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

dataset = pd.read_csv('CancerCells.csv')
x = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1:].values
xtrain, xtest, ytrain, ytest = tts(x, y, test_size = 0.25, random_state = 0)

# sc = StandardScaler()
# xtrain = sc.fit_transform(xtrain)
# xtest = sc.transform(xtest)

c = DecisionTreeClassifier()
c.fit(xtrain, ytrain)
ypred = c.predict(xtest)
print(accuracy_score(ytest, ypred))

c = SVC(kernel='rbf', random_state=0)
c.fit(xtrain, ytrain)
ypred = c.predict(xtest)
print(accuracy_score(ytest, ypred))

c = GaussianNB()
c.fit(xtrain, ytrain)
ypred = c.predict(xtest)
print(accuracy_score(ytest, ypred))

c = RandomForestClassifier(random_state=0)
c.fit(xtrain, ytrain)
ypred = c.predict(xtest)
print(accuracy_score(ytest, ypred))

c = KNeighborsClassifier(n_neighbors=3)
c.fit(xtrain, ytrain)
ypred = c.predict(xtest)
print(accuracy_score(ytest, ypred))

c = LogisticRegression(random_state=0)
c.fit(xtrain, ytrain)
ypred = c.predict(xtest)
print(accuracy_score(ytest, ypred))