{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Diamonds","provenance":[],"authorship_tag":"ABX9TyMUnN/ukHdDegz+rWCu83Vi"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"f2P8CZb46JPR","executionInfo":{"status":"ok","timestamp":1628882253452,"user_tz":300,"elapsed":1185,"user":{"displayName":"A P","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjn1FbRsMTHakQE1zGFoZqL6IGB1u-FwKffikaFrDQ=s64","userId":"07409191532959877607"}}},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split as tts\n","from sklearn.linear_model import LinearRegression\n","from sklearn.preprocessing import PolynomialFeatures\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.tree import DecisionTreeRegressor\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.neighbors import KNeighborsRegressor\n","from sklearn.metrics import r2_score\n","from sklearn.preprocessing import OneHotEncoder\n","from sklearn.compose import ColumnTransformer\n","from sklearn.preprocessing import LabelEncoder"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"addU-CLw8rUi","executionInfo":{"status":"ok","timestamp":1628882712848,"user_tz":300,"elapsed":293,"user":{"displayName":"A P","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjn1FbRsMTHakQE1zGFoZqL6IGB1u-FwKffikaFrDQ=s64","userId":"07409191532959877607"}},"outputId":"b608ad59-8bb2-47a1-8f30-b6b412d4fc1a"},"source":["dataset = pd.read_csv('diamonds.csv')\n","x = dataset.iloc[:, [0,1,2,3,4,5,7,8,9]]\n","y = dataset.iloc[:, 6:7]\n","ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [1, 2, 3])], remainder='passthrough')\n","x = ct.fit_transform(x)\n","print(pd.DataFrame(x).head())\n","xtrain, xtest, ytrain, ytest = tts(x, y, test_size = 0.25, random_state = 0)\n","sc = StandardScaler()\n","xtrain[:, 21:23] = sc.fit_transform(xtrain[:, 21:23])\n","xtest[:, 21:23] = sc.transform(xtest[:, 21:23])\n","ytrain = sc.fit_transform(ytrain)"],"execution_count":7,"outputs":[{"output_type":"stream","text":["    0    1    2    3    4    5    6   ...   19    20    21    22    23    24    25\n","0  0.0  0.0  1.0  0.0  0.0  0.0  1.0  ...  0.0  0.23  61.5  55.0  3.95  3.98  2.43\n","1  0.0  0.0  0.0  1.0  0.0  0.0  1.0  ...  0.0  0.21  59.8  61.0  3.89  3.84  2.31\n","2  0.0  1.0  0.0  0.0  0.0  0.0  1.0  ...  0.0  0.23  56.9  65.0  4.05  4.07  2.31\n","3  0.0  0.0  0.0  1.0  0.0  0.0  0.0  ...  0.0  0.29  62.4  58.0  4.20  4.23  2.63\n","4  0.0  1.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.31  63.3  58.0  4.34  4.35  2.75\n","\n","[5 rows x 26 columns]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JAzO6szU-f1l","executionInfo":{"status":"ok","timestamp":1628882780594,"user_tz":300,"elapsed":122,"user":{"displayName":"A P","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjn1FbRsMTHakQE1zGFoZqL6IGB1u-FwKffikaFrDQ=s64","userId":"07409191532959877607"}},"outputId":"267918d6-f5d6-4a3c-80bb-18bd53a27443"},"source":["reg = LinearRegression()\n","reg.fit(xtrain, ytrain)\n","ypred = sc.inverse_transform(reg.predict(xtest))\n","print(r2_score(ytest, ypred))"],"execution_count":8,"outputs":[{"output_type":"stream","text":["0.9205898473397893\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vd5FW9rr9zqE","executionInfo":{"status":"ok","timestamp":1628882986115,"user_tz":300,"elapsed":1788,"user":{"displayName":"A P","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjn1FbRsMTHakQE1zGFoZqL6IGB1u-FwKffikaFrDQ=s64","userId":"07409191532959877607"}},"outputId":"e785cfbd-93c7-4e7e-9af5-127067da7840"},"source":["pl = PolynomialFeatures(degree=2)\n","xplytrain = pl.fit_transform(xtrain)\n","xplytest = pl.transform(xtest)\n","reg.fit(xplytrain, ytrain)\n","ypred = sc.inverse_transform(reg.predict(xplytest))\n","print(r2_score(ytest, ypred))"],"execution_count":12,"outputs":[{"output_type":"stream","text":["0.9659975673994347\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X_l_OE59_N16","executionInfo":{"status":"ok","timestamp":1628883035063,"user_tz":300,"elapsed":521,"user":{"displayName":"A P","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjn1FbRsMTHakQE1zGFoZqL6IGB1u-FwKffikaFrDQ=s64","userId":"07409191532959877607"}},"outputId":"023177ad-c809-49f4-b7a2-ed43312ec248"},"source":["reg = DecisionTreeRegressor()\n","reg.fit(xtrain, ytrain)\n","ypred = sc.inverse_transform(reg.predict(xtest))\n","print(r2_score(ytest, ypred))"],"execution_count":13,"outputs":[{"output_type":"stream","text":["0.9646928502084369\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4EOXHXob_rDe","executionInfo":{"status":"ok","timestamp":1628883102270,"user_tz":300,"elapsed":24688,"user":{"displayName":"A P","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjn1FbRsMTHakQE1zGFoZqL6IGB1u-FwKffikaFrDQ=s64","userId":"07409191532959877607"}},"outputId":"e577354d-c3b2-468e-faed-8b9e94fbd3e3"},"source":["reg = RandomForestRegressor()\n","reg.fit(xtrain, ytrain)\n","ypred = sc.inverse_transform(reg.predict(xtest))\n","print(r2_score(ytest, ypred))"],"execution_count":14,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  \n"],"name":"stderr"},{"output_type":"stream","text":["0.980173477493998\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9PvhSkRB_2ni","executionInfo":{"status":"ok","timestamp":1628883195409,"user_tz":300,"elapsed":4003,"user":{"displayName":"A P","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gjn1FbRsMTHakQE1zGFoZqL6IGB1u-FwKffikaFrDQ=s64","userId":"07409191532959877607"}},"outputId":"6b08918b-182b-405e-9a98-b28733bc0755"},"source":["reg = KNeighborsRegressor(n_neighbors=5)\n","reg.fit(xtrain, ytrain)\n","ypred = sc.inverse_transform(reg.predict(xtest))\n","print(r2_score(ytest, ypred))"],"execution_count":20,"outputs":[{"output_type":"stream","text":["0.956070982545305\n"],"name":"stdout"}]}]}